name: "Continuous Integration - Spring App"
on:
  push:
    branches:
      - main

jobs:
  code-build:
    runs-on: ubuntu-22.04
    permissions:
      id-token: write
      contents: read
    steps:
    - uses: actions/checkout@v3
      name: Set up JDK 17
    - uses: actions/setup-java@v3
      with: 
        distribution: 'temurin'
        java-version: '17'

    - name: init with Gradle
      uses: gradle/gradle-build-action@v2

    - name: Build with Gradle
      run: cd backend/Reely && ./gradlew build
      
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v3
      with:
        role-to-assume: arn:aws:iam::673004107015:role/ECR_OIDC_ROLE
        aws-region: ap-northeast-2
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: pull base image
      continue-on-error: true
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ns-reely-ecr
      run: |
        docker pull ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:latest
        
    - name: push base image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: repository_name
      run: |
        docker build --cache-from=${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:latest -f ./infra/Dockerfile.base -t tag_name .
        docker tag image_name ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:latest
        docker tag image_name ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ github.sha }}
        docker push ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }} --all-tags
